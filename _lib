#compdef lib

# We don't want to show the descriptions.
zstyle ':completion:*:*:lib:*:*' verbose no


# Get the path to the library.
local archivepath=$(lib where)


# Completion for top-level commands.
_lib_cmds() {
  local subcmds=('open:open' 'add:add' 'browse:browse' 'search:search' \
                 'link:link' 'ln:ln' 'compile:compile' 'where:where' \
                 'bookmark:bookmark' 'bm:bm' 'cd:cd' 'rekey:rekey' \
                 'rename:rename')
  _describe 'command' subcmds
}


_lib_cd() {
  _path_files -W archivepath -/
}


# Simply complete a key in the archive or shelves.
_lib_key() {
  local keys=($(lib complete keys))
  _values 'key' $keys
}


# Completion for the open subcommand.
_lib_open() {
  # Here we use both a custom list of completion strings and the files in the
  # shelves directory.
  local opts=($(lib complete keys))
  _alternative 'args: :((-b\:"open bibtex"))' \
               "links: :_values key $opts"
}


# Completion for the add subcommand.
_lib_add() {
  # The -s allows stacking of single-letter arguments.
  _arguments -s '-d' '--delete' \
                '-t' '--tag' \
                '1: :_files -g "*.pdf"' \
                '2: :_files -g "*.bib"'
}


_lib_link() {
  local paths=($archivepath)
  _arguments '-f:link:_files' '--fix:link:_files' \
             '1: :_path_files -W paths -/'
}

_lib_browse() {
  _arguments '--key' '--author' '--title' '--year' '--venue' '--type' '--text' \
             '-s: :(key title year added recent matches)' \
             '--sort: :(key title year added recent matches)' \
             '-n' '--number' \
             '-v' '-vv' '--verbose' \
             '-r' '--reverse'
}


# We require an initial command, potentially followed by some arguments.
_arguments -C '1: :_lib_cmds' '*::args:->args'


# Do completion for individual commands.
case $state in
  (args)
    case $line[1] in
      (link|ln)     _lib_link ;;
      (browse|search|grep) _lib_browse ;;
      (cd)          _lib_cd ;;
      (open)        _lib_open ;;
      (add)         _lib_add  ;;
      (rekey)       _lib_key ;;
    esac
    ;;
esac
